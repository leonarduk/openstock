/*
 * Copyright (C) 2019 Lucas Meyer
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package analisadorasset.submodulografico;

import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.DocumentBuilder;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;

import mierclasses.mcfuncoeshelper;

import org.w3c.dom.Node;
import org.w3c.dom.Element;
import java.io.File;
import java.io.IOException;

/**
 *
 * @author lucasmeyer
 */
public class frame_adicionarindicador extends javax.swing.JFrame {
	public static analisadorasset.submodulografico.panel_submodulografico submodulopai;

	/**
	 * Creates new form mfadicionarindicador
	 */
	public frame_adicionarindicador(analisadorasset.submodulografico.panel_submodulografico smodpai) {
		initComponents();

		submodulopai = smodpai;

		inicializarjanelaadicionarindicador();
	}

	void inicializarjanelaadicionarindicador() {
		// abrir documento /arquivosconfig/indicadores.mfxconfig para ler indicadores
		// disponiveis para uso
		// e criar itens com indicadores disponiveis no jComboBoxIndicadoresDisponiveis

		try {
			jComboBoxIndicadoresDisponiveis.removeAllItems();

			File xmlArquivo = new File(
					getClass().getClassLoader().getResource("indicators.mfxconfig").getFile());
			if (!xmlArquivo.exists()) {
				throw new IOException("Cant find file");
			}
			DocumentBuilderFactory dbfactory = DocumentBuilderFactory.newInstance();

			DocumentBuilder dbuilder = dbfactory.newDocumentBuilder();

			Document document = dbuilder.parse(xmlArquivo);

			NodeList listaIndicadoresDisponiveis = document.getElementsByTagName("Indicator");

			for (int i = 0; i < listaIndicadoresDisponiveis.getLength(); i++) {
				Node nodeIndicador = listaIndicadoresDisponiveis.item(i);

				if (nodeIndicador.getNodeType() == Node.ELEMENT_NODE) {
					Element elIndicador = (Element) nodeIndicador;

					String id = elIndicador.getElementsByTagName("BCID").item(0).getTextContent();
					String nome = elIndicador.getElementsByTagName("Name").item(0).getTextContent();
					String caminhobcode = elIndicador.getElementsByTagName("BearcodeFile").item(0).getTextContent();

					jComboBoxIndicadoresDisponiveis.addItem(nome + " [" + id + "]");
				}
			}
		} catch (Exception e) {
			mcfuncoeshelper.mostrarmensagem("Uma exceção ocorreu: " + e.toString());
		}
	}

	void adicionarindicador() {
		String indicadorselecionadostring = (String) jComboBoxIndicadoresDisponiveis.getSelectedItem();
		// mierclasses.mcfuncoeshelper.mostrarmensagem(indicadorselecionadostring);
		String idbc = (indicadorselecionadostring.split("\\[")[1]).split("\\]")[0];
		// mierclasses.mcfuncoeshelper.mostrarmensagem(idbc);
		String parametrosbc = jTextFieldParametrosIndicador.getText();
		// mierclasses.mcfuncoeshelper.mostrarmensagem(parametrosbc);
		submodulopai.adicionarIndicadorNovo(idbc, parametrosbc);
		this.dispose();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jPanelFundo = new javax.swing.JPanel();
		jPanelFundo2 = new javax.swing.JPanel();
		jLabelNome = new javax.swing.JLabel();
		jComboBoxIndicadoresDisponiveis = new javax.swing.JComboBox<>();
		jLabelParametros = new javax.swing.JLabel();
		jTextFieldParametrosIndicador = new javax.swing.JTextField();
		jButtonAdicionarIndicador = new javax.swing.JButton();

		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		setTitle("Add New Indicator");

		jPanelFundo.setBackground(new java.awt.Color(55, 55, 55));

		jPanelFundo2.setBackground(new java.awt.Color(120, 120, 120));

		jLabelNome.setForeground(new java.awt.Color(255, 255, 255));
		jLabelNome.setText("Name:");

		jComboBoxIndicadoresDisponiveis
				.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "(no indicators)" }));

		jLabelParametros.setForeground(new java.awt.Color(255, 255, 255));
		jLabelParametros.setText("Parameters:");

		jButtonAdicionarIndicador.setText("Add");
		jButtonAdicionarIndicador.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButtonAdicionarIndicadorActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout jPanelFundo2Layout = new javax.swing.GroupLayout(jPanelFundo2);
		jPanelFundo2.setLayout(jPanelFundo2Layout);
		jPanelFundo2Layout.setHorizontalGroup(jPanelFundo2Layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanelFundo2Layout.createSequentialGroup().addContainerGap()
						.addGroup(jPanelFundo2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
										jPanelFundo2Layout.createSequentialGroup().addComponent(jLabelParametros)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
								.addGroup(jPanelFundo2Layout.createSequentialGroup().addComponent(jLabelNome).addGap(32,
										32, 32)))
						.addGroup(jPanelFundo2Layout
								.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
								.addComponent(jComboBoxIndicadoresDisponiveis, 0, 319, Short.MAX_VALUE)
								.addComponent(jTextFieldParametrosIndicador))
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
				.addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
						jPanelFundo2Layout.createSequentialGroup()
								.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addComponent(jButtonAdicionarIndicador).addContainerGap()));
		jPanelFundo2Layout.setVerticalGroup(jPanelFundo2Layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanelFundo2Layout.createSequentialGroup().addContainerGap()
						.addGroup(jPanelFundo2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jLabelNome).addComponent(jComboBoxIndicadoresDisponiveis,
										javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addGroup(jPanelFundo2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jLabelParametros).addComponent(jTextFieldParametrosIndicador,
										javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addComponent(jButtonAdicionarIndicador)
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

		javax.swing.GroupLayout jPanelFundoLayout = new javax.swing.GroupLayout(jPanelFundo);
		jPanelFundo.setLayout(jPanelFundoLayout);
		jPanelFundoLayout.setHorizontalGroup(jPanelFundoLayout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanelFundoLayout.createSequentialGroup().addContainerGap().addComponent(jPanelFundo2,
						javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addContainerGap()));
		jPanelFundoLayout.setVerticalGroup(jPanelFundoLayout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanelFundoLayout.createSequentialGroup().addContainerGap().addComponent(jPanelFundo2,
						javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addContainerGap()));

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(
				jPanelFundo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE,
				javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(
				jPanelFundo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE,
				javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));

		pack();
	}// </editor-fold>//GEN-END:initComponents

	private void jButtonAdicionarIndicadorActionPerformed(java.awt.event.ActionEvent evt)// GEN-FIRST:event_jButtonAdicionarIndicadorActionPerformed
	{// GEN-HEADEREND:event_jButtonAdicionarIndicadorActionPerformed
		adicionarindicador();
	}// GEN-LAST:event_jButtonAdicionarIndicadorActionPerformed

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
		// (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the default
		 * look and feel. For details see
		 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(frame_adicionarindicador.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(frame_adicionarindicador.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(frame_adicionarindicador.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(frame_adicionarindicador.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		}
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new frame_adicionarindicador(submodulopai).setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton jButtonAdicionarIndicador;
	private javax.swing.JComboBox<String> jComboBoxIndicadoresDisponiveis;
	private javax.swing.JLabel jLabelNome;
	private javax.swing.JLabel jLabelParametros;
	private javax.swing.JPanel jPanelFundo;
	private javax.swing.JPanel jPanelFundo2;
	private javax.swing.JTextField jTextFieldParametrosIndicador;
	// End of variables declaration//GEN-END:variables
}
