/*
 * Copyright (C) 2019 Lucas Meyer
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package assetparser.submodulografico;

/**
 *
 * @author lucasmeyer
 */
public class frame_adicionarsimbolo extends javax.swing.JFrame {
	/**
	 *
	 */
	private static final long serialVersionUID = -4926318419010454268L;
	public static assetparser.submodulografico.panel_submodulografico submodulograficopai;

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
		// (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the default
		 * look and feel. For details see
		 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (final javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (final ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(frame_adicionarsimbolo.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		} catch (final InstantiationException ex) {
			java.util.logging.Logger.getLogger(frame_adicionarsimbolo.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		} catch (final IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(frame_adicionarsimbolo.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		} catch (final javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(frame_adicionarsimbolo.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		}
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(() -> new frame_adicionarsimbolo(submodulograficopai).setVisible(true));
	}

	javax.swing.DefaultListModel<String> modellistasimbolosencontrados;

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JCheckBox jCheckBoxAlphaVantageSearch;
	private javax.swing.JCheckBox jCheckBoxCryptoCompareSearch;

	private javax.swing.JCheckBox jCheckBoxIEXSearch;

	private javax.swing.JLabel jLabelProcurar;

	private javax.swing.JPanel jPanelFundo;

	private javax.swing.JPanel jPanelFundo2;

	private javax.swing.JScrollPane jScrollPane1;

	private javax.swing.JButton jbAdicionarSimbolo;

	private javax.swing.JButton jbProcurarSimbolo;

	private javax.swing.JList<String> jlistSimbolosEncontrados;

	private javax.swing.JTextField jtfProcurarSimbolo;

	// End of variables declaration//GEN-END:variables
	// construtor sem busca
	public frame_adicionarsimbolo(assetparser.submodulografico.panel_submodulografico smodpai) {
		this.initComponents();

		submodulograficopai = smodpai;

		this.modellistasimbolosencontrados = new javax.swing.DefaultListModel<String>();
		this.jlistSimbolosEncontrados.setModel(this.modellistasimbolosencontrados);
	}

	// construtor com busca
	public frame_adicionarsimbolo(assetparser.submodulografico.panel_submodulografico smodpai,
			String textobuscainicial) {
		this.initComponents();

		submodulograficopai = smodpai;

		this.modellistasimbolosencontrados = new javax.swing.DefaultListModel<String>();
		this.jlistSimbolosEncontrados.setModel(this.modellistasimbolosencontrados);

		this.jtfProcurarSimbolo.setText(textobuscainicial);
	}

	void adicionarsimboloprograma() {
		final String simboloatual = this.modellistasimbolosencontrados
				.getElementAt(this.jlistSimbolosEncontrados.getSelectedIndex()).split(" - ")[0];

		submodulograficopai.adicionarsimboloaotextboxsubmodulo(simboloatual);
		this.dispose();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		this.jPanelFundo = new javax.swing.JPanel();
		this.jPanelFundo2 = new javax.swing.JPanel();
		this.jLabelProcurar = new javax.swing.JLabel();
		this.jtfProcurarSimbolo = new javax.swing.JTextField();
		this.jbProcurarSimbolo = new javax.swing.JButton();
		this.jbAdicionarSimbolo = new javax.swing.JButton();
		this.jScrollPane1 = new javax.swing.JScrollPane();
		this.jlistSimbolosEncontrados = new javax.swing.JList<>();
		this.jCheckBoxIEXSearch = new javax.swing.JCheckBox();
		this.jCheckBoxAlphaVantageSearch = new javax.swing.JCheckBox();
		this.jCheckBoxCryptoCompareSearch = new javax.swing.JCheckBox();

		this.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		this.setTitle("Search for Symbol");

		this.jPanelFundo.setBackground(new java.awt.Color(55, 55, 55));

		this.jPanelFundo2.setBackground(new java.awt.Color(120, 120, 120));

		this.jLabelProcurar.setForeground(new java.awt.Color(255, 255, 255));
		this.jLabelProcurar.setText("Search:");

		this.jbProcurarSimbolo.setText("OK");
		this.jbProcurarSimbolo
				.addActionListener(evt -> frame_adicionarsimbolo.this.jbProcurarSimboloActionPerformed(evt));

		this.jbAdicionarSimbolo.setText("Add");
		this.jbAdicionarSimbolo
				.addActionListener(evt -> frame_adicionarsimbolo.this.jbAdicionarSimboloActionPerformed(evt));

		this.jScrollPane1.setViewportView(this.jlistSimbolosEncontrados);

		this.jCheckBoxIEXSearch.setBackground(new java.awt.Color(120, 120, 120));
		this.jCheckBoxIEXSearch.setForeground(new java.awt.Color(255, 255, 255));
		this.jCheckBoxIEXSearch.setSelected(true);
		this.jCheckBoxIEXSearch.setText("IEX");
		this.jCheckBoxIEXSearch
				.addActionListener(evt -> frame_adicionarsimbolo.this.jCheckBoxIEXSearchActionPerformed(evt));

		this.jCheckBoxAlphaVantageSearch.setBackground(new java.awt.Color(120, 120, 120));
		this.jCheckBoxAlphaVantageSearch.setForeground(new java.awt.Color(255, 255, 255));
		this.jCheckBoxAlphaVantageSearch.setSelected(true);
		this.jCheckBoxAlphaVantageSearch.setText("Alpha Vantage");
		this.jCheckBoxAlphaVantageSearch
				.addActionListener(evt -> frame_adicionarsimbolo.this.jCheckBoxAlphaVantageSearchActionPerformed(evt));

		this.jCheckBoxCryptoCompareSearch.setBackground(new java.awt.Color(120, 120, 120));
		this.jCheckBoxCryptoCompareSearch.setForeground(new java.awt.Color(255, 255, 255));
		this.jCheckBoxCryptoCompareSearch.setSelected(true);
		this.jCheckBoxCryptoCompareSearch.setText("CryptoCompare");
		this.jCheckBoxCryptoCompareSearch
				.addActionListener(evt -> frame_adicionarsimbolo.this.jCheckBoxCryptoCompareSearchActionPerformed(evt));

		final javax.swing.GroupLayout jPanelFundo2Layout = new javax.swing.GroupLayout(this.jPanelFundo2);
		this.jPanelFundo2.setLayout(jPanelFundo2Layout);
		jPanelFundo2Layout.setHorizontalGroup(jPanelFundo2Layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanelFundo2Layout.createSequentialGroup().addContainerGap()
						.addGroup(jPanelFundo2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(this.jScrollPane1)
								.addGroup(jPanelFundo2Layout.createSequentialGroup().addComponent(this.jLabelProcurar)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(this.jtfProcurarSimbolo)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
										.addComponent(this.jbProcurarSimbolo))
								.addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
										jPanelFundo2Layout.createSequentialGroup().addComponent(this.jCheckBoxIEXSearch)
												.addGap(18, 18, 18).addComponent(this.jCheckBoxAlphaVantageSearch)
												.addGap(18, 18, 18).addComponent(this.jCheckBoxCryptoCompareSearch)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
														117, Short.MAX_VALUE)
												.addComponent(this.jbAdicionarSimbolo)))
						.addContainerGap()));
		jPanelFundo2Layout.setVerticalGroup(jPanelFundo2Layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanelFundo2Layout.createSequentialGroup().addContainerGap()
						.addGroup(jPanelFundo2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(this.jLabelProcurar)
								.addComponent(this.jtfProcurarSimbolo, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(this.jbProcurarSimbolo))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(this.jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addGroup(jPanelFundo2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(this.jbAdicionarSimbolo)
								.addGroup(jPanelFundo2Layout
										.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(this.jCheckBoxIEXSearch)
										.addComponent(this.jCheckBoxAlphaVantageSearch)
										.addComponent(this.jCheckBoxCryptoCompareSearch)))
						.addContainerGap()));

		final javax.swing.GroupLayout jPanelFundoLayout = new javax.swing.GroupLayout(this.jPanelFundo);
		this.jPanelFundo.setLayout(jPanelFundoLayout);
		jPanelFundoLayout.setHorizontalGroup(jPanelFundoLayout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanelFundoLayout.createSequentialGroup().addContainerGap().addComponent(this.jPanelFundo2,
						javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addContainerGap()));
		jPanelFundoLayout.setVerticalGroup(jPanelFundoLayout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanelFundoLayout.createSequentialGroup().addContainerGap().addComponent(this.jPanelFundo2,
						javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addGap(14, 14, 14)));

		final javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this.getContentPane());
		this.getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(
				this.jPanelFundo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE,
				javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(
				this.jPanelFundo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE,
				javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));

		this.pack();
	}// </editor-fold>//GEN-END:initComponents

	private void jbAdicionarSimboloActionPerformed(java.awt.event.ActionEvent evt)// GEN-FIRST:event_jbAdicionarSimboloActionPerformed
	{// GEN-HEADEREND:event_jbAdicionarSimboloActionPerformed
		this.adicionarsimboloprograma();
	}// GEN-LAST:event_jbAdicionarSimboloActionPerformed

	private void jbProcurarSimboloActionPerformed(java.awt.event.ActionEvent evt)// GEN-FIRST:event_jbProcurarSimboloActionPerformed
	{// GEN-HEADEREND:event_jbProcurarSimboloActionPerformed
		this.procurarsimbolosemostrarnalista();
	}// GEN-LAST:event_jbProcurarSimboloActionPerformed

	private void jCheckBoxAlphaVantageSearchActionPerformed(java.awt.event.ActionEvent evt)// GEN-FIRST:event_jCheckBoxAlphaVantageSearchActionPerformed
	{// GEN-HEADEREND:event_jCheckBoxAlphaVantageSearchActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_jCheckBoxAlphaVantageSearchActionPerformed

	private void jCheckBoxCryptoCompareSearchActionPerformed(java.awt.event.ActionEvent evt)// GEN-FIRST:event_jCheckBoxCryptoCompareSearchActionPerformed
	{// GEN-HEADEREND:event_jCheckBoxCryptoCompareSearchActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_jCheckBoxCryptoCompareSearchActionPerformed

	private void jCheckBoxIEXSearchActionPerformed(java.awt.event.ActionEvent evt)// GEN-FIRST:event_jCheckBoxIEXSearchActionPerformed
	{// GEN-HEADEREND:event_jCheckBoxIEXSearchActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_jCheckBoxIEXSearchActionPerformed

	void procurarsimbolosemostrarnalista() {
		this.modellistasimbolosencontrados.removeAllElements();

		if (this.jCheckBoxIEXSearch.isSelected() == true) {
			final java.util.List<String> simbolosencontradosiex = submodulograficopai.submodulohpai.assetpai.iaassetpai.tprincipalpai.msapicomms
					.iex_procurarsimbolo(this.jtfProcurarSimbolo.getText());
			for (int i = 0; i < simbolosencontradosiex.size(); i++) {
				this.modellistasimbolosencontrados.addElement(simbolosencontradosiex.get(i));
			}
		}

		if (this.jCheckBoxAlphaVantageSearch.isSelected() == true) {
			final java.util.List<String> simbolosencontradosav = submodulograficopai.submodulohpai.assetpai.iaassetpai.tprincipalpai.msapicomms
					.av_procurarsimbolo(this.jtfProcurarSimbolo.getText());
			for (int i = 0; i < simbolosencontradosav.size(); i++) {
				this.modellistasimbolosencontrados.addElement(simbolosencontradosav.get(i));
			}
		}

		if (this.jCheckBoxCryptoCompareSearch.isSelected() == true) {
			final java.util.List<String> simbolosencontradoscc = submodulograficopai.submodulohpai.assetpai.iaassetpai.tprincipalpai.msapicomms
					.crycom_procurarsimbolo(this.jtfProcurarSimbolo.getText());
			for (int i = 0; i < simbolosencontradoscc.size(); i++) {
				this.modellistasimbolosencontrados.addElement(simbolosencontradoscc.get(i));
			}
		}

		this.jlistSimbolosEncontrados.setSelectedIndex(0);
	}
}
