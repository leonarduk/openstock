/*
 * Copyright (C) 2019 Lucas Meyer
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

//MACD Trader Script Sample
//buy all you can if macd_tm1 > 0 and macd_tm2 < 0
//sell all you can if macd_tm1 < 0 and macd_tm2 > 0

//inputs
var candlesinput = candles;
var baseamountinput = basefunds;
//runoutput.print("baseamountinput: " + baseamountinput);
var quoteamountinput = quotefunds;
//runoutput.print("\nquoteamountinput: " + quoteamountinput);
var bidinput = lastbid;
//runoutput.print("\nbidinput: " + bidinput);
var askinput = lastask;
//runoutput.print("\naskinput: " + askinput);
var buyfeeinput = buyfee;
//runoutput.print("\nbuyfeeinput: " + buyfeeinput);
var sellfeeinput = sellfee;
//runoutput.print("\nsellfeeinput: " + sellfeeinput);

//no parameters

//calculate macd histogram
var closes_timestamps = retornarclosestimestamp();
var closes = closes_timestamps[0];
var timestamps = closes_timestamps[1];
var ema_timestamps_ta = calculate_ema(12,closes,timestamps);
var ema_timestamps_tb = calculate_ema(26,closes,timestamps);
var macdline = calculate_difference
(
    ema_timestamps_ta[0],
    ema_timestamps_tb[0],
    ema_timestamps_ta[1],
    ema_timestamps_tb[1],
    (26-12)
);
var signalline = calculate_ema(9,macdline[0],macdline[1]);
var macdhistogram = calculate_difference
(
    macdline[0],
    signalline[0],
    macdline[1],
    signalline[1],
    9
)

//trader answer
var macdhistogramvalores = macdhistogram[0];
var macdhist_tm1 = macdhistogramvalores[macdhistogramvalores.length-1];
//runoutput.print("\nmacdhist_tm1: " + macdhist_tm1);
var macdhist_tm2 = macdhistogramvalores[macdhistogramvalores.length-2];
//runoutput.print("\nmacdhist_tm2: " + macdhist_tm2);

var tradermove = "hold";
if ((macdhist_tm1 > 0) && ((macdhist_tm2 < 0)))
    tradermove = "buyall";
else if ((macdhist_tm1 < 0) && ((macdhist_tm2 > 0)))
    tradermove = "sellall";

var amountbase = [0];

//runoutput.print("\ntradermove: " + tradermove);
//runoutput.print("\nsupportamount: " + supportamount);

var supportamount = Java.to(amountbase,"double[]");





//SUPPORT MACD ALGORITHM FUNCTIONS
function retornarclosestimestamp()
{
    var valoresclose = [];
    var timestampsclose = [];

    for (i = 0; i < candlesinput.length; i++)
    {
        valoresclose.push(candlesinput[i].closed);
        //runoutput.print(candlesinput[i].closed);
        timestampsclose.push(candlesinput[i].timestampdate);
        //runoutput.print(candlesinput[i].timestampdate);
    }

    var retornoclose = [];
    retornoclose.push(valoresclose);
    retornoclose.push(timestampsclose);
    //runoutput.print("retornoclose: " + retornoclose[1]);

    return retornoclose;
}

function calculate_ema(periodo,valoresx,valorestimestamp)
{
    var valormultiplierema = (2.0/(periodo+1.0));

    var valoresema = [];
    var timestampsema = [];

    for (i = periodo; i < valoresx.length; i++)
    {
        if (i == periodo)
        {
            var somaatual = 0;
            for (j = 0; j < periodo; j++)
            {
                var indiceatual = i-periodo+j;
                somaatual = somaatual + valoresx[indiceatual];
            }
            var emaatual = somaatual/periodo;
            var timestampatual = valorestimestamp[i];
            valoresema.push(emaatual);
            timestampsema.push(timestampatual);
        }
        else if (i > periodo)
        {
            var emaanterior = valoresema[i-periodo-1];
            var closingatual = valoresx[i];

            var emaatual = (closingatual-emaanterior)*valormultiplierema + emaanterior;
            var timestampatual = valorestimestamp[i];

            valoresema.push(emaatual);
            timestampsema.push(timestampatual);
        }
    }

    var retornoema = [];
    retornoema.push(valoresema);
    retornoema.push(timestampsema);    
    
    return retornoema;
}

function calculate_difference(valores_a,valores_b,timestamps_a,timestamps_b,gapindex)
{
    //suposicao
    //ema_a tem 77 valores, e seu periodo eh de 12
    //ema_b tem 63 valores, e seu periodo eh de 26
    //deve ser feito a subtracao a partir de (ema_a[0+14]-ema_b[0])  ateh (ema_a[62+14=76]-ema_b[62])

    var valoresdiff = [];
    var timestampsdiff = []

    var diferencaperiodos = gapindex;
    var tamanhofinal = valores_b.length;

    //returns de macd line, emata - ematb, where period a < b
    for (i = 0; i < tamanhofinal; i++)
    {
        var diffatual = valores_a[i+diferencaperiodos] - valores_b[i];
        var timestampatual = timestamps_b[i]; //ou timestamps_a[i+diferencaperiodos]

        valoresdiff.push(diffatual);
        timestampsdiff.push(timestampatual);
    }

    var retornodiff = [];
    retornodiff.push(valoresdiff);
    retornodiff.push(timestampsdiff);

    return retornodiff;
}