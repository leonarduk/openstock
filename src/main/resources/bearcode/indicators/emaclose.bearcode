/*
 * Copyright (C) 2019 Lucas Meyer
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

//codigo de simple moving average

//debugoutput.println("NOVO TESTE");

//candles recebidos pelo OpenStock
var candlesinput = candles;

//parametro esperado para este codigo
var periodoinput = parseInt(period); //periodo=10;periodo=50;etc...

//receber dois arrays com closes e timestamps
var valoresclose = [];
var valorestimestamp = []; 
for (i = 0; i < candlesinput.length; i++)
{
    valoresclose.push(candlesinput[i].closed);
    valorestimestamp.push(candlesinput[i].timestampdate);
    //debugoutput.println(i+": " + candlesinput[i].closed + "\n" + candlesinput[i].timestampdate + "\n\n");
}

//exemplo de 100 candles para sma 5, temos entao os calculos de sma_t_5 ate sma_t_99, sendo entao 94 valores com indices de 0 a 93
var valoresema_emasclose = [];
var valoresema_timestamp = [];

//debugoutput.println("periodoinput = " + typeof periodoinput);
var valormultiplierema = (2.0/(periodoinput+1.0));
//debugoutput.println("valormultiplierema = " + valormultiplierema);

for (i = periodoinput; i < valoresclose.length; i++)
{
    //exemplo EMA de 10
    //o calculo de EMA para o primeiro periodo eh igual a SMA
    //SMA: 10-period sum รท 10
    if (i == periodoinput)
    {
        var somaatual = 0;
        for (j = 0; j < periodoinput; j++)
        {
            var indiceatual = i-periodoinput+j;
            somaatual = somaatual + valoresclose[indiceatual];
            //debugoutput.println("somaatual = " + somaatual);
        }
        var emaatual = somaatual/periodoinput;
        //debugoutput.println("emaatual = " + emaatual);
        var timestampatual = valorestimestamp[i];
        //debugoutput.println("timestampatual = " + timestampatual);
        valoresema_emasclose.push(emaatual);
        valoresema_timestamp.push(timestampatual);
    }
    //o calculo de EMA para os proximos periodos segue a formula 
    //https://www.investopedia.com/ask/answers/122314/what-exponential-moving-average-ema-formula-and-how-ema-calculated.asp
    //Calculating the weighting multiplier: [2 รท (selected time period + 1)] = [2 รท (10 + 1)] = 0.1818 or 18.18%
    //Calculating the EMA: [Closing price-EMA (previous day)] x multiplier + EMA (previous day)
    else if (i > periodoinput)
    {
        //resgatar ema do periodo anterior
        var emaanterior = valoresema_emasclose[i-periodoinput-1];
        //debugoutput.println("emaanterior = " + emaanterior);
        var closingatual = valoresclose[i];
        //debugoutput.println("closingatual = " + closingatual);

        var emaatual = (closingatual-emaanterior)*valormultiplierema + emaanterior;
        //debugoutput.println("emaatual = " + emaatual);
        var timestampatual = valorestimestamp[i];
        //debugoutput.println("timestampatual = " + timestampatual);

        valoresema_emasclose.push(emaatual);
        valoresema_timestamp.push(timestampatual);
    }
}

var scriptdescription = "EMA ("+periodoinput+");drawoncandles"; 
var yvalues = Java.to(valoresema_emasclose,"double[]");
var xvalues = Java.to(valoresema_timestamp,"java.util.Date[]");